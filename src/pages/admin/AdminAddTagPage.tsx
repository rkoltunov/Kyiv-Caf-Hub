import { useState } from "react";
import api from "../../api";

const categories = ["METRO", "VIBE", "MENU", "ACCESSIBILITY", "BUDGET", "OTHER"];

// =============================
// üî§ –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä slug
// =============================
const generateSlug = (name: string) =>
  name
    .toLowerCase()
    .trim()
    .replace(/[^a-z–∞-—è0-9\s-]/gi, "") // —É–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ —Å–∏–º–≤–æ–ª—ã
    .replace(/\s+/g, "-") // –ø—Ä–æ–±–µ–ª—ã ‚Üí –¥–µ—Ñ–∏—Å—ã
    .replace(/-+/g, "-"); // –¥–≤–æ–π–Ω—ã–µ –¥–µ—Ñ–∏—Å—ã ‚Üí –æ–¥–∏–Ω

export default function AdminAddTagPage() {
  const [form, setForm] = useState({
    name: "",
    slug: "",
    tagCategory: "OTHER",
  });

  const [isSlugEdited, setIsSlugEdited] = useState(false); // üëà —á—Ç–æ–±—ã –∑–Ω–∞—Ç—å, —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–ª –ª–∏ —é–∑–µ—Ä –≤—Ä—É—á–Ω—É—é
  const [success, setSuccess] = useState("");
  const [error, setError] = useState("");

  // =============================
  // ‚úèÔ∏è –ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø–æ–ª–µ–π
  // =============================
  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {
    const { name, value } = e.target;

    if (name === "name") {
      // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º slug, –ø–æ–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞—á–∞–ª –µ–≥–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –≤—Ä—É—á–Ω—É—é
      setForm((prev) => ({
        ...prev,
        name: value,
        slug: isSlugEdited ? prev.slug : generateSlug(value),
      }));
    } else if (name === "slug") {
      // –ï—Å–ª–∏ —á–µ–ª–æ–≤–µ–∫ –≤—Ä—É—á–Ω—É—é –≤–≤–æ–¥–∏—Ç slug ‚Äî –±–æ–ª—å—à–µ –Ω–µ —Ç—Ä–æ–≥–∞–µ–º –µ–≥–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
      setIsSlugEdited(true);
      setForm((prev) => ({
        ...prev,
        slug: generateSlug(value),
      }));
    } else {
      setForm((prev) => ({ ...prev, [name]: value }));
    }
  };

  // =============================
  // üöÄ –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º—ã
  // =============================
  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setError("");
    setSuccess("");

    try {
      const res = await api.post("/tag", form);
      if (res.status === 201 || res.status === 200) {
        setSuccess("‚úÖ –¢–µ–≥ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!");
        setForm({ name: "", slug: "", tagCategory: "OTHER" });
        setIsSlugEdited(false); // —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥
      }
    } catch (err: any) {
      setError(err?.response?.data?.message ?? "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç–µ–≥–∞");
    }
  };

  // =============================
  // üß± UI
  // =============================
  return (
    <div className="max-w-md mx-auto py-10">
      <h1 className="text-2xl font-bold mb-6">–î–æ–±–∞–≤–∏—Ç—å —Ç–µ–≥</h1>

      <form onSubmit={handleSubmit} className="space-y-4">
        {/* –ù–∞–∑–≤–∞–Ω–∏–µ */}
        <input
          name="name"
          placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä: Vegan)"
          value={form.name}
          onChange={handleChange}
          className="w-full p-3 border rounded-lg"
          required
        />

        {/* Slug (–∞–≤—Ç–æ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è) */}
        <input
          name="slug"
          placeholder="Slug (–Ω–∞–ø—Ä–∏–º–µ—Ä: vegan)"
          value={form.slug}
          onChange={handleChange}
          className="w-full p-3 border rounded-lg bg-gray-50"
          required
        />

        {/* –ö–∞—Ç–µ–≥–æ—Ä–∏—è */}
        <select
          name="tagCategory"
          value={form.tagCategory}
          onChange={handleChange}
          className="w-full p-3 border rounded-lg"
        >
          {categories.map((c) => (
            <option key={c} value={c}>
              {c}
            </option>
          ))}
        </select>

        {/* –°–æ–æ–±—â–µ–Ω–∏—è */}
        {success && <p className="text-green-600">{success}</p>}
        {error && <p className="text-red-600">{error}</p>}

        {/* –ö–Ω–æ–ø–∫–∞ */}
        <button
          type="submit"
          className="bg-black text-white py-3 px-6 rounded-lg hover:bg-gray-800 w-full"
        >
          –î–æ–±–∞–≤–∏—Ç—å —Ç–µ–≥
        </button>
      </form>
    </div>
  );
}
